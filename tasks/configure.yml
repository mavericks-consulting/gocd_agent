---

- name: Ensure Hostname is Resolvable
  become: yes
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 localhost {{ ansible_hostname }}"
    regexp: ^127\.0\.0\.1
  when: ansible_virtualization_type != "docker"

- name: Copy go-agent startup script for additional agents
  become: yes
  copy:
    src: /etc/init.d/go-agent
    dest: "/etc/init.d/go-agent-{{ item }}"
    force: no
    remote_src: yes
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Ensure startup scripts for additional agents have their own provider name
  become: yes
  lineinfile:
    backrefs: yes
    dest: "/etc/init.d/go-agent-{{ item }}"
    line: "# Provides: go-agent-{{ item }}"
    regexp: "^# Provides: go-agent$"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Ensure perms on startup scripts for additional agents
  become: yes
  file:
    mode: 0754
    path: "/etc/init.d/go-agent-{{ item }}"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Ensure startup scripts for additional agents are enabled
  become: yes
  service:
    enabled: yes
    name: "go-agent-{{ item }}"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Create soft links to /usr for additional agents
  become: yes
  file:
    state: link
    src: /usr/share/go-agent
    dest: "/usr/share/go-agent-{{ item }}"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Create working directories for additional agents
  become: yes
  file:
    state: directory
    path: "{{ sansible_gocd_agent_user_dir }}/work/go-agent-{{ item }}"
    owner: "{{ sansible_gocd_agent_user }}"
    group: "{{ sansible_gocd_agent_user }}"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Create log directories for additional agents
  become: yes
  file:
    state: directory
    path: "/var/log/go-agent-{{ item }}"
    owner: "{{ sansible_gocd_agent_user }}"
    group: "{{ sansible_gocd_agent_user }}"
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Ensures go-agent Configuration
  become: yes
  template:
    dest: /etc/default/go-agent
    group: "{{ sansible_gocd_agent_user }}"
    owner: "{{ sansible_gocd_agent_user }}"
    src: defaults.j2
  notify: restart go-agent

- name: Query AWS for GoCD Server
  ec2_remote_facts:
    filters: "{{ sansible_gocd_agent_aws_gocd_server_lookup_filters }}"
  register: gocd_server_lookup
  when: sansible_gocd_agent_aws_gocd_server_lookup_filters != {}

- name: Set IP of GoCD server
  set_fact:
    sansible_gocd_agent_server: "{{ gocd_server_lookup.instances[0].private_ip_address }}"
  when:
    - gocd_server_lookup is defined
    - gocd_server_lookup.instances | default([]) != []

- name: Copy secrets from S3
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  aws_s3:
    bucket: "{{ item.s3_path | regex_replace('^s3://([^/]+)/.*', '\\1') }}"
    object: "{{ item.s3_path | regex_replace('^s3://[^/]+(/.*)', '\\1') }}"
    dest: "{{ item.local_path }}"
    mode: get
  with_items: "{{ sansible_gocd_agent_aws_s3_secret_files }}"

- name: Secure secrets from S3
  become: yes
  file:
    group: "{{ sansible_gocd_agent_user }}"
    mode: "{{ item.mode | default(0600) }}"
    owner: "{{ sansible_gocd_agent_user }}"
    path: "{{ item.local_path }}"
  with_items: "{{ sansible_gocd_agent_aws_s3_secret_files }}"

- name: Ensure .aws folder
  become: yes
  file:
    state: directory
    path: "/home/{{ sansible_gocd_agent_user }}/.aws"
    owner: "{{ sansible_gocd_agent_user }}"
    group: "{{ sansible_gocd_agent_user }}"
  when: sansible_gocd_agent_aws_profiles != []

- name: Configure AWS credentials
  become: yes
  template:
    dest: "/home/{{ sansible_gocd_agent_user }}/.aws/credentials"
    src: aws/credentials.j2
  when: sansible_gocd_agent_aws_profiles != []

- name: Configure SSH
  become: yes
  copy:
    src: ssh_config
    dest: "/home/{{ sansible_gocd_agent_user }}/.ssh/config"
    group: "{{ sansible_gocd_agent_user }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0600

- name: Configure SSH agent setup in bash profile
  become: yes
  template:
    src: .bashrc.j2
    dest: "/home/{{ sansible_gocd_agent_user }}/.bashrc"
    group: "{{ sansible_gocd_agent_user }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0644

- name: Add config folder for agents
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  file:
    name: "/home/{{ sansible_gocd_agent_user }}/work/go-agent-{{ item }}/config"
    state: directory
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"
  when: sansible_gocd_agent_auto_register_key is not none

- name: Configure auto registration
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  template:
    dest: "/home/{{ sansible_gocd_agent_user }}/work/go-agent-{{ item }}/config/autoregister.properties"
    src: autoregister.properties.j2
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"
  when: sansible_gocd_agent_auto_register_key is not none
  notify: restart go-agent

- name: Configure Git for Go CD user
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  template:
    dest: "/home/{{ sansible_gocd_agent_user }}/.gitconfig"
    src: gitconfig.j2

- name: Create defaults file for additional agents
  become: yes
  template:
    dest: "/etc/default/go-agent-{{ item }}"
    src: defaults.j2
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"

- name: Ensure all the agents are started
  become: yes
  service:
    name: "go-agent-{{ item }}"
    state: started
  with_sequence: count="{{ sansible_gocd_agent_no_of_agents }}"
